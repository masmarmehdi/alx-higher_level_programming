The ``matrix_divided`` module
=============================

Using ``matrix division``
-------------------------

This module defines the division of each element in the matrix based on user's choice ``matrix_divided(matrix, div).``

The matrix_divided return the result of divided elements by the divisor.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::

The function raises a ZeroDivisionError if the divisor is 0.

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: divison by zero

::

The function raises a TypeError if the element of the matrix aren't integers or floats.

    >>> matrix_divided([[1, "No", 3], ["Say something", 5, "hello"]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

The function raises a TypeError if the divisor isn't a integer or a float.

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Yo!")
    Traceback (most recent call last):
    TypeError: div must be a number

::

The function raises a TypeError if the row of the matrix are not the same size.

    >>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

